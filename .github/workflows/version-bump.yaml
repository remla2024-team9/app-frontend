name: Bump Version and Push Tag

on:
  push:
    branches:
      - main

jobs:
  bump_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          VERSION_PARTS=(${CURRENT_VERSION//./ })
          VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "New version: $NEW_VERSION"
          jq ".version = \"$NEW_VERSION\"" package.json > package.tmp.json && mv package.tmp.json package.json
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Verify version consistency
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$PACKAGE_VERSION" != "${{ steps.bump_version.outputs.new_version }}" ]; then
            echo "Version in package.json ($PACKAGE_VERSION) does not match the expected new version (${{ steps.bump_version.outputs.new_version }})"
            exit 1
          fi

      - name: Commit version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add package.json
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin main --tags
